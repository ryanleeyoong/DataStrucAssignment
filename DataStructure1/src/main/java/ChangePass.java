
import java.awt.Color;
import javax.swing.JPanel;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.RandomAccessFile;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author Ryan's PC
 */
public class ChangePass extends javax.swing.JFrame {

    int val;

    /**
     * Creates new form ChangePass
     */
    public ChangePass() {
        initComponents();
        setLocationRelativeTo(null);//set the page location 
        setResizable(false);//disable the resizable function
        loadPass();
    }

    private String currentPass, newPass;
    
    public void loadPass() {
        // read password from text file and store into a variable
        try {
            File passTxt = new File("password.txt");
            Scanner scanner = new Scanner(passTxt);
            currentPass = scanner.nextLine();
        } catch (FileNotFoundException e) {
            System.out.println("An error occured.");
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Backbtn = new javax.swing.JLabel();
        Logo = new javax.swing.JLabel();
        PoseidonIcon = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Title2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        eyeIcon = new javax.swing.JLabel();
        Logo1 = new javax.swing.JLabel();
        Title1 = new javax.swing.JLabel();
        SaveBtn = new javax.swing.JButton();
        CancelBtn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        tfCurrentPass = new javax.swing.JPasswordField();
        jCheckBoxShowPass = new javax.swing.JCheckBox();
        tfNewPass = new javax.swing.JPasswordField();
        tfConfirmPass = new javax.swing.JPasswordField();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lblInvalidConPass = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Backbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BackbtnMouseClicked(evt);
            }
        });
        jPanel1.add(Backbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));
        jPanel1.add(Logo, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 50, -1, -1));
        jPanel1.add(PoseidonIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 190, -1, -1));
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 500));
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 50, -1, -1));

        Title2.setFont(new java.awt.Font("Open Sans", 1, 24)); // NOI18N
        Title2.setText("Poseidon System");
        jPanel1.add(Title2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 140, -1, -1));
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 170, -1, -1));
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel3.add(eyeIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 330, 30, -1));
        jPanel3.add(Logo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 50, -1, -1));

        Title1.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        Title1.setText("Change Password");
        jPanel3.add(Title1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 150, 270, -1));

        SaveBtn.setBackground(new java.awt.Color(13, 109, 63));
        SaveBtn.setFont(new java.awt.Font("Leelawadee UI", 0, 12)); // NOI18N
        SaveBtn.setForeground(new java.awt.Color(255, 255, 255));
        SaveBtn.setText("Save");
        SaveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveBtnActionPerformed(evt);
            }
        });
        jPanel3.add(SaveBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 380, 60, -1));

        CancelBtn.setBackground(new java.awt.Color(182, 52, 52));
        CancelBtn.setFont(new java.awt.Font("Leelawadee UI", 0, 12)); // NOI18N
        CancelBtn.setForeground(new java.awt.Color(255, 255, 255));
        CancelBtn.setText("Cancel");
        CancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelBtnActionPerformed(evt);
            }
        });
        jPanel3.add(CancelBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 380, -1, -1));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanel2MouseExited(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Leelawadee UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 51, 51));
        jLabel2.setText("Forgot Password ?");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jLabel2)
                .addContainerGap(40, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel2))
        );

        jPanel3.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 460, 200, 20));

        tfCurrentPass.setText("CURRENT PASSWORD");
        tfCurrentPass.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfCurrentPassFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfCurrentPassFocusLost(evt);
            }
        });
        tfCurrentPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfCurrentPassActionPerformed(evt);
            }
        });
        tfCurrentPass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfCurrentPassKeyReleased(evt);
            }
        });
        jPanel3.add(tfCurrentPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 210, 260, 30));

        jCheckBoxShowPass.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBoxShowPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxShowPassActionPerformed(evt);
            }
        });
        jPanel3.add(jCheckBoxShowPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 350, -1, -1));

        tfNewPass.setText("NEW PASSWORD");
        tfNewPass.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfNewPassFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfNewPassFocusLost(evt);
            }
        });
        tfNewPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfNewPassActionPerformed(evt);
            }
        });
        tfNewPass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfNewPassKeyReleased(evt);
            }
        });
        jPanel3.add(tfNewPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 250, 260, 30));

        tfConfirmPass.setText("CONFIRM NEW PASSWORD");
        tfConfirmPass.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfConfirmPassFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfConfirmPassFocusLost(evt);
            }
        });
        tfConfirmPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfConfirmPassActionPerformed(evt);
            }
        });
        tfConfirmPass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfConfirmPassKeyReleased(evt);
            }
        });
        jPanel3.add(tfConfirmPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 290, 260, 30));
        jPanel3.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 50, -1, -1));
        jPanel3.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 330, -1, -1));

        lblInvalidConPass.setForeground(java.awt.Color.red);
        lblInvalidConPass.setText("   ");
        jPanel3.add(lblInvalidConPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 330, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
public void setColor(JPanel p) {
        p.setBackground(new Color(255, 105, 0));
    }

    public void resetColor(JPanel p1) {
        p1.setBackground(new Color(255, 255, 255));
    }

    

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChangePass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChangePass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChangePass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChangePass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ChangePass().setVisible(true);
            }
        });
    }

    private void BackbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BackbtnMouseClicked
        Login lg = new Login();
        lg.show();

        dispose();

    }//GEN-LAST:event_BackbtnMouseClicked

    private void jPanel2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseEntered
        setColor(jPanel1);
    }//GEN-LAST:event_jPanel2MouseEntered

    private void jPanel2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseExited
        resetColor(jPanel1);
    }//GEN-LAST:event_jPanel2MouseExited

    private void jPanel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseClicked
        ForgotPass fp = new ForgotPass();
        fp.show();

        dispose();
    }//GEN-LAST:event_jPanel2MouseClicked


    private void CancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelBtnActionPerformed
        Login lg = new Login();
        lg.show();

        dispose();
    }//GEN-LAST:event_CancelBtnActionPerformed


    private void tfCurrentPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfCurrentPassActionPerformed
        if (jCheckBoxShowPass.isSelected()) {
            tfCurrentPass.setEchoChar((char) 0);
        } else {
            tfCurrentPass.setEchoChar('*');
        }
    }//GEN-LAST:event_tfCurrentPassActionPerformed

    private void tfCurrentPassFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfCurrentPassFocusGained
        if (tfCurrentPass.getText().equals("CURRENT PASSWORD")) {
            //if there are no input, the removeplaceholder function will be set and the text will be set as null.
            tfCurrentPass.setText("");
            tfCurrentPass.setEchoChar('*');
            tfNewPass.setEchoChar((char) 0);
            tfNewPass.setForeground(new Color(153, 153, 153));
            tfConfirmPass.setEchoChar((char) 0);
            tfConfirmPass.setForeground(new Color(153, 153, 153));
            tfCurrentPass.setForeground(new Color(0, 0, 0));
        }
    }//GEN-LAST:event_tfCurrentPassFocusGained

    private void tfCurrentPassFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfCurrentPassFocusLost
        if (tfCurrentPass.getText().equals("")) {
            //if there are no input, the removeplaceholder function will be set and the text will be set as null.
            tfCurrentPass.setEchoChar((char) 0);
            tfCurrentPass.setText("CURRENT PASSWORD");
            tfCurrentPass.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_tfCurrentPassFocusLost

    private void jCheckBoxShowPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxShowPassActionPerformed
        if (jCheckBoxShowPass.isSelected()) {
            tfCurrentPass.setEchoChar((char) 0);
            tfNewPass.setEchoChar((char) 0);
            tfConfirmPass.setEchoChar((char) 0);
        } else {
            tfCurrentPass.setEchoChar('*');
            tfNewPass.setEchoChar('*');
            tfConfirmPass.setEchoChar('*');
        }
    }//GEN-LAST:event_jCheckBoxShowPassActionPerformed

    private void tfCurrentPassKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfCurrentPassKeyReleased
        //force user input to uppercase
        int position = tfCurrentPass.getCaretPosition();
        tfCurrentPass.setText(tfCurrentPass.getText().toUpperCase());
        tfCurrentPass.setCaretPosition(position);
    }//GEN-LAST:event_tfCurrentPassKeyReleased

    private void tfConfirmPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfConfirmPassActionPerformed
        if (jCheckBoxShowPass.isSelected()) {
            tfConfirmPass.setEchoChar((char) 0);
        } else {
            tfConfirmPass.setEchoChar('*');
        }
    }//GEN-LAST:event_tfConfirmPassActionPerformed

    private void tfNewPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfNewPassActionPerformed
        if (jCheckBoxShowPass.isSelected()) {
            tfNewPass.setEchoChar((char) 0);
        } else {
            tfNewPass.setEchoChar('*');
        }
    }//GEN-LAST:event_tfNewPassActionPerformed

    private void tfNewPassFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfNewPassFocusGained
        if (tfNewPass.getText().equals("NEW PASSWORD")) {
            //if there are no input, the removeplaceholder function will be set and the text will be set as null.
            tfNewPass.setText("");
            tfNewPass.setEchoChar('*');
            tfNewPass.setForeground(new Color(0, 0, 0));
        }
    }//GEN-LAST:event_tfNewPassFocusGained

    private void tfNewPassFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfNewPassFocusLost
        if (tfNewPass.getText().equals("")) {
            //if there are no input, the removeplaceholder function will be set and the text will be set as null.
            tfNewPass.setEchoChar((char) 0);
            tfNewPass.setText("NEW PASSWORD");
            tfNewPass.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_tfNewPassFocusLost

    private void tfConfirmPassFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfConfirmPassFocusGained
        if (tfConfirmPass.getText().equals("CONFIRM NEW PASSWORD")) {
            //if there are no input, the removeplaceholder function will be set and the text will be set as null.
            tfConfirmPass.setText("");
            tfConfirmPass.setEchoChar('*');
            tfConfirmPass.setForeground(new Color(0, 0, 0));
        }
    }//GEN-LAST:event_tfConfirmPassFocusGained

    private void tfConfirmPassFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfConfirmPassFocusLost
        if (tfConfirmPass.getText().equals("")) {
            //if there are no input, the removeplaceholder function will be set and the text will be set as null.
            tfConfirmPass.setEchoChar((char) 0);
            tfConfirmPass.setText("CONFIRM NEW PASSWORD");
            tfConfirmPass.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_tfConfirmPassFocusLost

    private void tfNewPassKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfNewPassKeyReleased
        //force user input to uppercase
        int position = tfNewPass.getCaretPosition();
        tfNewPass.setText(tfNewPass.getText().toUpperCase());
        tfNewPass.setCaretPosition(position);
    }//GEN-LAST:event_tfNewPassKeyReleased

    private void tfConfirmPassKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfConfirmPassKeyReleased
        //force user input to uppercase
        int position = tfConfirmPass.getCaretPosition();
        tfConfirmPass.setText(tfConfirmPass.getText().toUpperCase());
        tfConfirmPass.setCaretPosition(position);
    }//GEN-LAST:event_tfConfirmPassKeyReleased

    private void SaveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveBtnActionPerformed

        lblInvalidConPass.setText("");
        if (tfCurrentPass.getText().equals(currentPass)) {
            if (tfNewPass.getText().equals(tfConfirmPass.getText())) {
                try {
                    FileWriter passTxt = new FileWriter("password.txt");
                    passTxt.write(tfNewPass.getText());
                    passTxt.close();
                } catch (IOException e) {
                    System.out.println("An error occured.");
                    e.printStackTrace();
                }
                
                JOptionPane.showMessageDialog(null, "New password set successfully", "New Password", JOptionPane.ERROR_MESSAGE);
                
                loadPass();
            } else {
                lblInvalidConPass.setText("Confirm password didn't match. Try again.");
                tfConfirmPass.setText("");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Incorrect current password");
        }

    }//GEN-LAST:event_SaveBtnActionPerformed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Backbtn;
    private javax.swing.JButton CancelBtn;
    private javax.swing.JLabel Logo;
    private javax.swing.JLabel Logo1;
    private javax.swing.JLabel PoseidonIcon;
    private javax.swing.JButton SaveBtn;
    private javax.swing.JLabel Title1;
    private javax.swing.JLabel Title2;
    private javax.swing.JLabel eyeIcon;
    private javax.swing.JCheckBox jCheckBoxShowPass;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel lblInvalidConPass;
    private javax.swing.JPasswordField tfConfirmPass;
    private javax.swing.JPasswordField tfCurrentPass;
    private javax.swing.JPasswordField tfNewPass;
    // End of variables declaration//GEN-END:variables
}

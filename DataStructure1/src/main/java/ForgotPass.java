
import java.awt.Color;
import java.awt.Font;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.RandomAccessFile;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Ryan's PC
 */
public class ForgotPass extends javax.swing.JFrame {

    /**
     * Creates new form ForgotPass
     */
    public ForgotPass() {
        initComponents();
        setLocationRelativeTo(null);//set the page location 
        setResizable(false);//disable the resizable function
        addPlaceholderStyle(tfAnswer);
        addPlaceholderStyle(tfNewPass);
        addPlaceholderStyle(tfConfirmPass);
        loadAnswer();
    }

    private String answer;
    
    public void loadAnswer() {

        // read password from text file and store into a variable
        try {
            File ansTxt = new File("answer.txt");
            Scanner scanner = new Scanner(ansTxt);
            answer = scanner.nextLine();
        } catch (FileNotFoundException e) {
            System.out.println("An error occured.");
            e.printStackTrace();
        }
    }
    public void addPlaceholderStyle(JTextField textField) {
        //addPlaceholder function
        Font font = textField.getFont();
        font = font.deriveFont(Font.PLAIN);
        textField.setFont(font);
        textField.setForeground(Color.gray);
    }

    public void removePlaceholderStyle(JTextField textField) {
        //removePlaceholder function
        Font font = textField.getFont();
        font = font.deriveFont(Font.PLAIN | Font.BOLD);
        textField.setFont(font);
        textField.setForeground(Color.black);
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        Title2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        eyeIcon = new javax.swing.JLabel();
        Logo1 = new javax.swing.JLabel();
        SaveBtn = new javax.swing.JButton();
        CancelBtn = new javax.swing.JButton();
        jCheckBoxShowPass = new javax.swing.JCheckBox();
        tfNewPass = new javax.swing.JPasswordField();
        tfConfirmPass = new javax.swing.JPasswordField();
        jLabel8 = new javax.swing.JLabel();
        ForogotTitle2 = new javax.swing.JLabel();
        ForgotTitle = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        tfAnswer = new javax.swing.JTextField();
        lblInvalidConPass = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 50, -1, -1));

        Title2.setFont(new java.awt.Font("Open Sans", 1, 24)); // NOI18N
        Title2.setText("Poseidon System");
        getContentPane().add(Title2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 140, -1, -1));
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 170, -1, -1));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel3.add(eyeIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 330, 30, -1));
        jPanel3.add(Logo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 50, -1, -1));

        SaveBtn.setBackground(new java.awt.Color(13, 109, 63));
        SaveBtn.setFont(new java.awt.Font("Leelawadee UI", 0, 12)); // NOI18N
        SaveBtn.setForeground(new java.awt.Color(255, 255, 255));
        SaveBtn.setText("Save");
        SaveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveBtnActionPerformed(evt);
            }
        });
        jPanel3.add(SaveBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 390, 60, -1));

        CancelBtn.setBackground(new java.awt.Color(182, 52, 52));
        CancelBtn.setFont(new java.awt.Font("Leelawadee UI", 0, 12)); // NOI18N
        CancelBtn.setForeground(new java.awt.Color(255, 255, 255));
        CancelBtn.setText("Cancel");
        CancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelBtnActionPerformed(evt);
            }
        });
        jPanel3.add(CancelBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 390, -1, -1));

        jCheckBoxShowPass.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBoxShowPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxShowPassActionPerformed(evt);
            }
        });
        jPanel3.add(jCheckBoxShowPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 360, -1, -1));

        tfNewPass.setText("NEW PASSWORD");
        tfNewPass.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfNewPassFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfNewPassFocusLost(evt);
            }
        });
        tfNewPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfNewPassActionPerformed(evt);
            }
        });
        tfNewPass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfNewPassKeyReleased(evt);
            }
        });
        jPanel3.add(tfNewPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 260, 260, 30));

        tfConfirmPass.setText("CONFIRM NEW PASSWORD");
        tfConfirmPass.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfConfirmPassFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfConfirmPassFocusLost(evt);
            }
        });
        tfConfirmPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfConfirmPassActionPerformed(evt);
            }
        });
        tfConfirmPass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfConfirmPassKeyReleased(evt);
            }
        });
        jPanel3.add(tfConfirmPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 300, 260, 30));
        jPanel3.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 340, -1, -1));

        ForogotTitle2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        ForogotTitle2.setForeground(new java.awt.Color(19, 92, 202));
        ForogotTitle2.setText("WHO IS THE BEST CS LECTURER");
        jPanel3.add(ForogotTitle2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, 390, -1));

        ForgotTitle.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        ForgotTitle.setText("Answer question to set new password");
        jPanel3.add(ForgotTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 150, 290, -1));
        jPanel3.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 40, -1, -1));

        tfAnswer.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        tfAnswer.setText("ANSWER");
        tfAnswer.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfAnswerFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfAnswerFocusLost(evt);
            }
        });
        tfAnswer.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfAnswerKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfAnswerKeyReleased(evt);
            }
        });
        jPanel3.add(tfAnswer, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 220, 260, 30));

        lblInvalidConPass.setForeground(java.awt.Color.red);
        lblInvalidConPass.setText("   ");
        jPanel3.add(lblInvalidConPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 340, -1, -1));

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 0, 420, 510));

        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 350, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SaveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveBtnActionPerformed
        save();
    }//GEN-LAST:event_SaveBtnActionPerformed

    private void CancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelBtnActionPerformed
        Login lg = new Login();
        lg.show();

        dispose();
    }//GEN-LAST:event_CancelBtnActionPerformed

    private void jCheckBoxShowPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxShowPassActionPerformed
        if(jCheckBoxShowPass.isSelected()){
          
            tfNewPass.setEchoChar((char)0);
            tfConfirmPass.setEchoChar((char)0);
        } else{
           
            tfNewPass.setEchoChar('*');
            tfConfirmPass.setEchoChar('*');
        }
    }//GEN-LAST:event_jCheckBoxShowPassActionPerformed

    private void tfNewPassFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfNewPassFocusGained
        if (tfNewPass.getText().equals("NEW PASSWORD")) {
            //if there are no input, the removeplaceholder function will be set and the text will be set as null.
            tfNewPass.setText("");
            tfNewPass.setEchoChar('*');
            tfNewPass.setForeground(new Color(0,0,0));
        }
    }//GEN-LAST:event_tfNewPassFocusGained

    private void tfNewPassFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfNewPassFocusLost
        if (tfNewPass.getText().equals("")) {
            //if there are no input, the removeplaceholder function will be set and the text will be set as null.
            tfNewPass.setEchoChar((char)0);
            tfNewPass.setText("NEW PASSWORD");
            tfNewPass.setForeground(new Color(153,153,153));
        }
    }//GEN-LAST:event_tfNewPassFocusLost

    private void tfNewPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfNewPassActionPerformed
        if(jCheckBoxShowPass.isSelected()){
            tfNewPass.setEchoChar((char)0);
        } else{
            tfNewPass.setEchoChar('*');
        }
    }//GEN-LAST:event_tfNewPassActionPerformed

    private void tfNewPassKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfNewPassKeyReleased
        //force user input to uppercase
        int position = tfNewPass.getCaretPosition();
        tfNewPass.setText(tfNewPass.getText().toUpperCase());
        tfNewPass.setCaretPosition(position);
    }//GEN-LAST:event_tfNewPassKeyReleased

    private void tfConfirmPassFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfConfirmPassFocusGained
        if (tfConfirmPass.getText().equals("CONFIRM NEW PASSWORD")) {
            //if there are no input, the removeplaceholder function will be set and the text will be set as null.
            tfConfirmPass.setText("");
            tfConfirmPass.setEchoChar('*');
            tfConfirmPass.setForeground(new Color(0,0,0));
        }
    }//GEN-LAST:event_tfConfirmPassFocusGained

    private void tfConfirmPassFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfConfirmPassFocusLost
        if (tfConfirmPass.getText().equals("")) {
            //if there are no input, the removeplaceholder function will be set and the text will be set as null.
            tfConfirmPass.setEchoChar((char)0);
            tfConfirmPass.setText("CONFIRM NEW PASSWORD");
            tfConfirmPass.setForeground(new Color(153,153,153));
        }
    }//GEN-LAST:event_tfConfirmPassFocusLost

    private void tfConfirmPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfConfirmPassActionPerformed
        if(jCheckBoxShowPass.isSelected()){
            tfConfirmPass.setEchoChar((char)0);
        } else{
            tfConfirmPass.setEchoChar('*');
        }
    }//GEN-LAST:event_tfConfirmPassActionPerformed

    private void tfConfirmPassKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfConfirmPassKeyReleased
        //force user input to uppercase
        int position = tfConfirmPass.getCaretPosition();
        tfConfirmPass.setText(tfConfirmPass.getText().toUpperCase());
        tfConfirmPass.setCaretPosition(position);
    }//GEN-LAST:event_tfConfirmPassKeyReleased

    private void tfAnswerFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfAnswerFocusGained
        if (tfAnswer.getText().equals("ANSWER")) {
            //if there are input, the removeplaceholder function will be set and the text will be set as null.And it will force the user input set as character
            tfAnswer.setText(null);
            tfAnswer.requestFocus();
            //set Password Charcter

            //remove placeholder style
            removePlaceholderStyle(tfAnswer);
        }
    }//GEN-LAST:event_tfAnswerFocusGained

    private void tfAnswerFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfAnswerFocusLost
        if (tfAnswer.getText().length() == 0) {
            //if there are no input, the addplaceholder function will be set and the text will be set as Password.If the user press the text field the text field will be set into character
            addPlaceholderStyle(tfAnswer);
            tfAnswer.setText("ANSWER");

        }
    }//GEN-LAST:event_tfAnswerFocusLost

    private void tfAnswerKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfAnswerKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            save();
        }
    }//GEN-LAST:event_tfAnswerKeyPressed

    private void tfAnswerKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfAnswerKeyReleased
        int position = tfAnswer.getCaretPosition();
        tfAnswer.setText(tfAnswer.getText().toUpperCase());
        tfAnswer.setCaretPosition(position);
    }//GEN-LAST:event_tfAnswerKeyReleased

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
         ChangePass cp = new ChangePass();
        cp.show();

        dispose();
    }//GEN-LAST:event_jLabel1MouseClicked

    private void save() {
           lblInvalidConPass.setText("");
        if (tfAnswer.getText().equals(answer)) {
            if (tfNewPass.getText().equals(tfConfirmPass.getText())) {
                try {
                    FileWriter ansTxt = new FileWriter("answer.txt");
                    ansTxt.write(tfNewPass.getText());
                    ansTxt.close();
                } catch (IOException e) {
                    System.out.println("An error occured.");
                    e.printStackTrace();
                }
                
                JOptionPane.showMessageDialog(null, "New password set successfully", "New Password", JOptionPane.ERROR_MESSAGE);
            } else {
                lblInvalidConPass.setText("Confirm password didn't match. Try again.");
                tfConfirmPass.setText("");
            }
        } else {
            JOptionPane.showMessageDialog(null, "WRONG!");
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ForgotPass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ForgotPass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ForgotPass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ForgotPass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ForgotPass().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CancelBtn;
    private javax.swing.JLabel ForgotTitle;
    private javax.swing.JLabel ForogotTitle2;
    private javax.swing.JLabel Logo1;
    private javax.swing.JButton SaveBtn;
    private javax.swing.JLabel Title2;
    private javax.swing.JLabel eyeIcon;
    private javax.swing.JCheckBox jCheckBoxShowPass;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel lblInvalidConPass;
    private javax.swing.JTextField tfAnswer;
    private javax.swing.JPasswordField tfConfirmPass;
    private javax.swing.JPasswordField tfNewPass;
    // End of variables declaration//GEN-END:variables
}
